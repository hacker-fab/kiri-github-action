name: Kiri KiCad Diff Action
description: An action using Kiri to diff KiCad projects in CI
branding:
  icon: 'eye'
  color: 'gray-dark'
inputs:
  project-file:
    description: Path to the KiCad project file
  output-dir:
    description: Change output folder path/name
  remove:
    description: Remove generated folder before running it
  archive:
    description: Archive generated files
  pcb-page-frame:
    description: Disable page frame for PCB
  force-layout-view:
    description: Force starting with the Layout view selected
  skip-kicad6-schematics:
    description: Skip ploting Kicad 6 schematics (.kicad.sch)
  skip-cache:
    description: Skip usage of -cache.lib on plotgitsch
  older:
    description: Show commits starting from this one
  newer:
    description: Show commits up to this one
  last:
    description: Show last N commits
  all:
    description: Include all commits even if schematics/layout don't have changes
  extra-args:
    description: Extra arguments to pass to Kiri
  kiri-debug:
    description: Enable debug mode for Kiri
outputs: {}
runs:
  using: composite
  steps:
  - name: Get number of commits in PR
    if: github.event_name == 'pull_request' && github.event.action != 'closed'
    id: pr
    shell: bash
    run: |
      if [ -z "${{ inputs.last }}" ]; then
        git fetch --unshallow || true
        git config remote.origin.fetch "+refs/heads/*:refs/remotes/origin/*"
        git fetch origin ${{ github.event.pull_request.head.ref }} --depth=$(( ${{ github.event.pull_request.commits }} + 1 ))
        git checkout ${{ github.event.pull_request.head.ref }}
        git fetch origin main:main
        COUNT=$(git rev-list --count ${{ github.event.pull_request.base.sha }}..${{ github.event.pull_request.head.sha }})
        echo "DEFAULT_LAST=${COUNT}" >> $GITHUB_ENV
      else
        echo "DEFAULT_LAST=${{ inputs.last }}" >> $GITHUB_ENV
      fi

  - name: Check for KiCad files
    id: kicad-files
    if: github.event_name == 'pull_request' && github.event.action != 'closed'
    shell: bash
    run: |
      if git diff --name-only ${{ github.event.pull_request.base.sha }} | grep -q '\.kicad\(_pro\|_sch\|_pcb\)\?$'; then
        echo "changed=true" >> $GITHUB_OUTPUT
      else
        echo "changed=false" >> $GITHUB_OUTPUT
      fi

  - name: Run Kiri
    uses: docker://ghcr.io/hacker-fab/kiri:v2.0.2
    if: github.event_name == 'pull_request' && github.event.action != 'closed' && steps.kicad-files.outputs.changed == 'true'
    env:
      KIRI_PROJECT_FILE: ${{ inputs.project-file }}
      KIRI_OUTPUT_DIR: ${{ inputs.output-dir }}
      KIRI_REMOVE: ${{ inputs.remove }}
      KIRI_ARCHIVE: ${{ inputs.archive }}
      KIRI_PCB_PAGE_FRAME: ${{ inputs.pcb-page-frame }}
      KIRI_FORCE_LAYOUT_VIEW: ${{ inputs.force-layout-view }}
      KIRI_SKIP_KICAD6_SCHEMATICS: ${{ inputs.skip-kicad6-schematics }}
      KIRI_SKIP_CACHE: ${{ inputs.skip-cache }}
      KIRI_OLDER: ${{ inputs.older }}
      KIRI_NEWER: ${{ inputs.newer }}
      KIRI_LAST: ${{ steps.pr.outputs.DEFAULT_LAST }}
      KIRI_ALL: ${{ inputs.all }}
      KIRI_DEBUG: ${{ inputs.kiri-debug }}
      KIRI_TAG: ${{ inputs.kiri-tag }}
    with:
      args: ${{ inputs.extra-args }}

  - name: Prepare artifact directory for Pages deployment
    if: github.event_name == 'pull_request' && github.event.action != 'closed' && steps.kicad-files.outputs.changed == 'true'
    shell: bash
    run: |
      # Determine the output directory:
      if [ -n "${{ inputs.output-dir }}" ]; then
        OUTPUT_DIR="${{ inputs.output-dir }}"
      else
        if [ -n "${{ inputs.project-file }}" ]; then
          OUTPUT_DIR="$(dirname "${{ inputs.project-file }}")/.kiri"
        else
          OUTPUT_DIR=".kiri"
        fi
      fi
      echo "Using output directory: $OUTPUT_DIR"
      
      # Remove any existing artifact directory and recreate the structure.
      rm -rf artifact
      mkdir -p artifact/pr-previews/${{ github.event.pull_request.number }}/web
      
      # Copy all files (including hidden ones) from the output directory.
      cp -r "$OUTPUT_DIR/." artifact/pr-previews/${{ github.event.pull_request.number }}/web/

  # Upload the prepared artifact for Pages deployment.
  - name: Upload artifact for GitHub Pages
    if: github.event_name == 'pull_request' && github.event.action != 'closed' && steps.kicad-files.outputs.changed == 'true'
    uses: actions/upload-pages-artifact@v3
    with:
      path: artifact
      include-hidden-files: true

  # Deploy the artifact via GitHub Pages.
  - name: Deploy to GitHub Pages
    if: github.event_name == 'pull_request' && github.event.action != 'closed' && steps.kicad-files.outputs.changed == 'true'
    uses: actions/deploy-pages@v4

  # Create a PR comment with the preview link.
  - name: Create a comment with the preview link
    if: github.event_name == 'pull_request' && github.event.action != 'closed' && steps.kicad-files.outputs.changed == 'true'
    uses: peter-evans/create-or-update-comment@v4
    with:
      issue-number: ${{ github.event.pull_request.number }}
      body: |
        Kiri diff output preview is available at:
        https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/pr-previews/${{ github.event.pull_request.number }}/web/index.html
